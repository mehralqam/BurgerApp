{"ast":null,"code":"var _jsxFileName = \"/home/dev/BurgerApp/src/pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { UserContext } from '../App';\nimport { useContext, useState } from \"react\";\nimport Burger from '../components/Burger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  // logic we need to implement is to set context is user logged in or not and access it in \\\n  //child components to render different pages\n  const [user, setUser] = useState([{\n    email: \"text@test.com\",\n    password: \"text123*\"\n  }]);\n  const isLogin = useContext(UserContext);\n\n  function onSubmit(fname) {\n    console.log(fname);\n    console.log(user);\n\n    if (user.email === fname[0].email && user.password === fname[0].password) {\n      setisLogin(true);\n    } else {\n      console.log(\"false\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLogin ? /*#__PURE__*/_jsxDEV(Burger, {\n      data: isLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please, log in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setUser({ ...user,\n            email: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: event => {\n          setUser({ ...user,\n            password: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), console.log(user), /*#__PURE__*/_jsxDEV(User.Consumer, {\n        children: fname => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onSubmit(fname),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Signup, \"8yJlounp/qQ330jFkollzreZ5dw=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","UserContext","useContext","useState","Burger","Signup","user","setUser","email","password","isLogin","onSubmit","fname","console","log","setisLogin","event","target","value"],"sources":["/home/dev/BurgerApp/src/pages/Signup.js"],"sourcesContent":["import React from 'react';\nimport { UserContext } from '../App';\nimport { useContext ,useState} from \"react\";\nimport Burger from '../components/Burger';\nconst Signup = () => {\n  // logic we need to implement is to set context is user logged in or not and access it in \\\n  //child components to render different pages\n  const [user, setUser] = useState([\n    {\n    email: \"text@test.com\",\n    password: \"text123*\"\n    }\n  ]);\n\n  const isLogin = useContext(UserContext);\n  function onSubmit(fname) {\n\n    console.log(fname)\n    console.log(user)\n    if(user.email === fname[0].email && user.password === fname[0].password){\n      setisLogin(true)\n    }\n    else\n    {\n      console.log(\"false\");\n    }\n  }\n\n  return (\n    <>{isLogin ? <Burger data={isLogin}/>: <><h1>Please, log in!</h1>\n\n    <label>Email:</label>\n    <input\n      type=\"text\"\n      onChange={(event) => {\n        setUser({...user, email: event.target.value});\n      }}\n    />\n    <label>Password:</label>\n    <input\n      type=\"password\"\n      onChange={(event) => {\n        setUser({...user, password: event.target.value})\n      }}\n    />\n    {console.log(user)}\n    <User.Consumer>\n    {\n\n    (fname)=>{\n      return <button onClick={() => onSubmit(fname)}>Submit</button>\n    }\n    }\n    </User.Consumer></>}\n\n\n    </>\n  )\n}\nexport default Signup;\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AACA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB;EACA;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAC/B;IACAK,KAAK,EAAE,eADP;IAEAC,QAAQ,EAAE;EAFV,CAD+B,CAAD,CAAhC;EAOA,MAAMC,OAAO,GAAGR,UAAU,CAACD,WAAD,CAA1B;;EACA,SAASU,QAAT,CAAkBC,KAAlB,EAAyB;IAEvBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACAC,OAAO,CAACC,GAAR,CAAYR,IAAZ;;IACA,IAAGA,IAAI,CAACE,KAAL,KAAeI,KAAK,CAAC,CAAD,CAAL,CAASJ,KAAxB,IAAiCF,IAAI,CAACG,QAAL,KAAkBG,KAAK,CAAC,CAAD,CAAL,CAASH,QAA/D,EAAwE;MACtEM,UAAU,CAAC,IAAD,CAAV;IACD,CAFD,MAIA;MACEF,OAAO,CAACC,GAAR,CAAY,OAAZ;IACD;EACF;;EAED,oBACE;IAAA,UAAGJ,OAAO,gBAAG,QAAC,MAAD;MAAQ,IAAI,EAAEA;IAAd;MAAA;MAAA;MAAA;IAAA,QAAH,gBAA6B;MAAA,wBAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAF,eAEvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFuC,eAGvC;QACE,IAAI,EAAC,MADP;QAEE,QAAQ,EAAGM,KAAD,IAAW;UACnBT,OAAO,CAAC,EAAC,GAAGD,IAAJ;YAAUE,KAAK,EAAEQ,KAAK,CAACC,MAAN,CAAaC;UAA9B,CAAD,CAAP;QACD;MAJH;QAAA;QAAA;QAAA;MAAA,QAHuC,eASvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATuC,eAUvC;QACE,IAAI,EAAC,UADP;QAEE,QAAQ,EAAGF,KAAD,IAAW;UACnBT,OAAO,CAAC,EAAC,GAAGD,IAAJ;YAAUG,QAAQ,EAAEO,KAAK,CAACC,MAAN,CAAaC;UAAjC,CAAD,CAAP;QACD;MAJH;QAAA;QAAA;QAAA;MAAA,QAVuC,EAgBtCL,OAAO,CAACC,GAAR,CAAYR,IAAZ,CAhBsC,eAiBvC,QAAC,IAAD,CAAM,QAAN;QAAA,UAGCM,KAAD,IAAS;UACP,oBAAO;YAAQ,OAAO,EAAE,MAAMD,QAAQ,CAACC,KAAD,CAA/B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAP;QACD;MALD;QAAA;QAAA;QAAA;MAAA,QAjBuC;IAAA;EAAvC,iBADF;AA8BD,CAtDD;;GAAMP,M;;KAAAA,M;AAuDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}