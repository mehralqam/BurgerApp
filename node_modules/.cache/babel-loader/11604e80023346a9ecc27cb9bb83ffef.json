{"ast":null,"code":"var _jsxFileName = \"/home/dev/BurgerApp/src/components/Burger.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ingredients = {\n  meat: {\n    id: 0,\n    ingredient: \"meat\",\n    price: 100,\n    quantity: 0\n  },\n  cheese: {\n    id: 1,\n    ingredient: \"cheese\",\n    price: 50,\n    quantity: 0\n  }\n};\n\nfunction Burger(props) {\n  _s();\n\n  console.log(\"hyy\", props); // const [burger, setBurger] = useState([])\n\n  const [price, setTotalPrice] = useState(0);\n  const [items, setItems] = useState([{\n    id: 0,\n    ingredient: \"meat\",\n    price: 100,\n    quantity: 0\n  }, {\n    id: 1,\n    ingredient: \"cheese\",\n    price: 50,\n    quantity: 0\n  }]);\n  useEffect(() => {\n    const sum = items.reduce((accumulator, object) => {\n      return accumulator + object.price * object.quantity;\n    }, 0);\n    setTotalPrice(sum);\n  }, [items]);\n\n  function addIngredient(id) {\n    const tmp = [...items];\n    const index = tmp.findIndex(el => el.id === id);\n\n    if (index !== -1) {}\n\n    let item_quantity = 0;\n    const updated_items = items.map(item => {\n      if (item.id === id) {\n        item_quantity = item.quantity + 1;\n        return { ...item,\n          quantity: item_quantity\n        };\n      }\n\n      return item;\n    });\n    setItems(updated_items);\n  }\n\n  function removeIngredient(id) {\n    let item_quantity = 0;\n    const updated_items = items.map(item => {\n      if (item.id === id) {\n        item_quantity = item.quantity - 1;\n        return { ...item,\n          quantity: item_quantity\n        };\n      }\n\n      return item;\n    });\n    setItems(updated_items);\n  }\n\n  var burgerIngredient = [];\n\n  function burgerContent() {\n    for (let i = 0; i < items[0].quantity; i++) {\n      burgerIngredient.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meat\"\n      }, burgerIngredient.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this));\n    }\n\n    for (let i = 0; i < items[1].quantity; i++) {\n      burgerIngredient.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cheese\"\n      }, burgerIngredient.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this));\n    }\n\n    if (burgerIngredient.length === 0) burgerIngredient.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please start adding ingredients!\"\n    }, \"0\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }, this));\n    return burgerIngredient;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topBun\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), burgerContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottomBun\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"total-price\",\n        children: [\" \", price, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burgerChoice\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addIngredient(0),\n        children: \"Add Meat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addIngredient(1),\n        children: \"Add Cheese \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: items[0].quantity <= 0 ? true : false,\n        onClick: () => removeIngredient(0),\n        children: \"Remove Meat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: items[1].quantity <= 0 ? true : false,\n        onClick: () => removeIngredient(1),\n        children: \"Remove Cheese \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Burger, \"MLKlg0DJb+njtrqZpDqCCwaRSDQ=\");\n\n_c = Burger;\nexport default Burger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","ingredients","meat","id","ingredient","price","quantity","cheese","Burger","props","console","log","setTotalPrice","items","setItems","sum","reduce","accumulator","object","addIngredient","tmp","index","findIndex","el","item_quantity","updated_items","map","item","removeIngredient","burgerIngredient","burgerContent","i","push","length"],"sources":["/home/dev/BurgerApp/src/components/Burger.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nconst ingredients = {\n  meat: {\n    id: 0,\n    ingredient: \"meat\",\n    price: 100,\n    quantity: 0,\n  },\n  cheese: {\n    id: 1,\n    ingredient: \"cheese\",\n    price: 50,\n    quantity: 0,\n  },\n}\n\nfunction Burger(props) {\n  console.log(\"hyy\",props);\n  // const [burger, setBurger] = useState([])\n  const [price, setTotalPrice] = useState(0)\n  const [items, setItems] = useState([\n    {\n      id: 0,\n      ingredient: \"meat\",\n      price: 100,\n      quantity: 0,\n    },\n    {\n      id: 1,\n      ingredient: \"cheese\",\n      price: 50,\n      quantity: 0,\n    },\n  ]);\n\n  useEffect(() => {\n    const sum = items.reduce((accumulator, object) => {\n      return accumulator + object.price * object.quantity;\n    }, 0);\n    setTotalPrice(sum);\n  }, [items]);\n\nfunction addIngredient(id) {\n\n  const tmp = [...items]\n\n  const index = tmp.findIndex((el) => el.id === id);\n\n  if (index !== -1) { }\n  let item_quantity = 0\n  const updated_items = items.map((item) => {\n    if (item.id === id) {\n      item_quantity = item.quantity + 1\n      return { ...item, quantity: item_quantity }\n    }\n    return item\n  })\n  setItems(updated_items)\n}\n\nfunction removeIngredient(id) {\n  let item_quantity = 0\n  const updated_items = items.map((item) => {\n    if (item.id === id) {\n      item_quantity = item.quantity - 1\n      return { ...item, quantity: item_quantity }\n    }\n    return item\n  })\n  setItems(updated_items)\n}\n\nvar burgerIngredient = [];\nfunction burgerContent() {\n  for (let i = 0; i < items[0].quantity; i++){\n      burgerIngredient.push(<div key={burgerIngredient.length} className=\"meat\"></div>);\n  }\n  for (let i = 0; i < items[1].quantity; i++){\n      burgerIngredient.push(<div key={burgerIngredient.length} className=\"cheese\"></div>);\n  }\n  if(burgerIngredient.length === 0)\n      burgerIngredient.push(<p key=\"0\">Please start adding ingredients!</p>);\n  return burgerIngredient;\n}\nreturn (\n  <div className=\"App\">\n    <div className=\"topBun\">\n    </div>\n      {burgerContent()}\n    <div className=\"bottomBun\">\n    </div>\n    <div className='total'>\n      <span id=\"total-price\"> {price} </span>\n    </div>\n    <div className=\"burgerChoice\">\n      <button onClick={() => addIngredient(0)}>Add Meat</button>\n      <button onClick={() => addIngredient(1)}>Add Cheese </button>\n      <button disabled={items[0].quantity<=0?true:false} onClick={() => removeIngredient(0)}>Remove Meat</button>\n      <button disabled={items[1].quantity<=0?true:false} onClick={() => removeIngredient(1)}>Remove Cheese </button>\n    </div>\n  </div>\n);\n}\nexport default Burger;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}