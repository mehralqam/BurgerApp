{"ast":null,"code":"var _jsxFileName = \"/home/dev/BurgerApp/src/pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { User } from '../App';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [user, setUser] = useState([{\n    email: \"text@test.com\",\n    password: \"text123*\"\n  }]);\n\n  function onSubmit(fname) {\n    console.log(\"++++++++++++++++++++++++++++++++++++++++\");\n    console.log(fname.email);\n    console.log(fname.password);\n    console.log(fname);\n    console.log(user);\n\n    if (user.email === fname.email) {\n      console.log(\"true\");\n    } else {\n      console.log(\"false\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please, log in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setUser({\n          email: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: event => {\n        setUser({\n          password: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(User.Consumer, {\n      children: fname => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSubmit(fname),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signup, \"do+lmDW4l79tYrArd13OWrvCReA=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","User","useState","Signup","user","setUser","email","password","onSubmit","fname","console","log","event","target","value"],"sources":["/home/dev/BurgerApp/src/pages/Signup.js"],"sourcesContent":["import React from 'react';\nimport { User } from '../App';\nimport { useState} from \"react\";\nconst Signup = () => {\n  const [user, setUser] = useState([\n    {\n    email: \"text@test.com\",\n    password: \"text123*\"\n    }\n  ]);\n\n  function onSubmit(fname) {\n    console.log(\"++++++++++++++++++++++++++++++++++++++++\");\n    console.log(fname.email);\n    console.log(fname.password);\n    console.log(fname)\n    console.log(user)\n    if(user.email === fname.email){\n      console.log(\"true\");\n    }\n    else\n    {\n      console.log(\"false\");\n    }\n  }\n\n  return (\n    <>\n      <h1>Please, log in!</h1>\n\n      <label>Email:</label>\n      <input\n        type=\"text\"\n        onChange={(event) => {\n          setUser({email: event.target.value});\n        }}\n      />\n      <label>Password:</label>\n      <input\n        type=\"password\"\n        onChange={(event) => {\n          setUser({password: event.target.value});\n        }}\n      />\n      <User.Consumer>\n      {\n      (fname)=>{\n      return <button onClick={() => onSubmit(fname)}>Submit</button>\n      }\n      }\n      </User.Consumer>\n\n    </>\n  )\n}\nexport default Signup;\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAwB,OAAxB;;;;AACA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAC/B;IACAI,KAAK,EAAE,eADP;IAEAC,QAAQ,EAAE;EAFV,CAD+B,CAAD,CAAhC;;EAOA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;IACvBC,OAAO,CAACC,GAAR,CAAY,0CAAZ;IACAD,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACH,KAAlB;IACAI,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;IACAG,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACAC,OAAO,CAACC,GAAR,CAAYP,IAAZ;;IACA,IAAGA,IAAI,CAACE,KAAL,KAAeG,KAAK,CAACH,KAAxB,EAA8B;MAC5BI,OAAO,CAACC,GAAR,CAAY,MAAZ;IACD,CAFD,MAIA;MACED,OAAO,CAACC,GAAR,CAAY,OAAZ;IACD;EACF;;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGC,KAAD,IAAW;QACnBP,OAAO,CAAC;UAACC,KAAK,EAAEM,KAAK,CAACC,MAAN,CAAaC;QAArB,CAAD,CAAP;MACD;IAJH;MAAA;MAAA;MAAA;IAAA,QAJF,eAUE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF,eAWE;MACE,IAAI,EAAC,UADP;MAEE,QAAQ,EAAGF,KAAD,IAAW;QACnBP,OAAO,CAAC;UAACE,QAAQ,EAAEK,KAAK,CAACC,MAAN,CAAaC;QAAxB,CAAD,CAAP;MACD;IAJH;MAAA;MAAA;MAAA;IAAA,QAXF,eAiBE,QAAC,IAAD,CAAM,QAAN;MAAA,UAECL,KAAD,IAAS;QACT,oBAAO;UAAQ,OAAO,EAAE,MAAMD,QAAQ,CAACC,KAAD,CAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAP;MACC;IAJD;MAAA;MAAA;MAAA;IAAA,QAjBF;EAAA,gBADF;AA4BD,CAnDD;;GAAMN,M;;KAAAA,M;AAoDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}