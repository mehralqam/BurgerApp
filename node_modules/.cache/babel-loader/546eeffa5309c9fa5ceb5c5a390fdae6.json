{"ast":null,"code":"var _jsxFileName = \"/home/dev/BurgerApp/src/pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useContext } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [user, setUser] = useState();\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: user,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `Hello ${user}!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Component2, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"kGLk6m4BT90iK1d91zRYm0C2usk=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","createContext","useContext","ReactDOM","Signup","user","setUser"],"sources":["/home/dev/BurgerApp/src/pages/Signup.js"],"sourcesContent":["import { useState, createContext, useContext } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nconst Signup = () => {\n  const [user, setUser] = useState();\n  return (\n    <UserContext.Provider value={user}>\n      <h1>{`Hello ${user}!`}</h1>\n      <Component2 user={user} />\n    </UserContext.Provider>\n  );\n}\nexport default Signup;\n\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AACA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;EACA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEK,IAA7B;IAAA,wBACE;MAAA,UAAM,SAAQA,IAAK;IAAnB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAY,IAAI,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CARD;;GAAMD,M;;KAAAA,M;AASN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}